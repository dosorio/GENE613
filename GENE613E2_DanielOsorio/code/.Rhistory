seq(from= 0.05, to=0.45, each = 0.05)
seq(0.05,0.45,0.05)
seq(0,0.3,0.05)
alleleFrequencyes <- sapply(seq(0.05,0.45,0.05), function(migrationProportion){
sapply(seq(0,0.3,0.05), function(alleleDifferences){
return(1)
})
})
colnames(alleleFrequencies)
seq(0.05,0.45,0.05)
colnames(alleleFrequencies) <- seq(0.05,0.45,0.05)
alleleFrequencies <- sapply(seq(0.05,0.45,0.05), function(migrationProportion){
sapply(seq(0,0.3,0.05), function(alleleDifferences){
return(1)
})
})
colnames(alleleFrequencies) <- seq(0.05,0.45,0.05)
colnames(alleleFrequencies) <- list(MIGRATION=seq(0.05,0.45,0.05))
colnames(alleleFrequencies) <- list(c(MIGRATION=seq(0.05,0.45,0.05)))
names(alleleFrequencies) <- list(c(MIGRATION=seq(0.05,0.45,0.05)))
alleleFrequencies
colnames(alleleFrequencies) <- c(MIGRATION=seq(0.05,0.45,0.05))
alleleFrequencies
alleleFrequencies <- sapply(seq(0.05,0.45,0.05), function(migrationProportion){
sapply(seq(0,0.3,0.05), function(alleleDifferences){
return(1)
})
})
colnames(alleleFrequencies) <- c(MIGRATION=seq(0.05,0.45,0.05))
alleleFrequencies
rownames(alleleFrequencies) <- c(ALLELE=seq(0,0.3,0.05))
alleleFrequencies <- sapply(seq(0.05,0.45,0.05), function(mProportion){
sapply(seq(0,0.3,0.05), function(alleleDiff){
return(1)
})
})
alleleFrequencies
newAlleleFrequencies <- function(p1, p2, m) {
A = ((1 - m) * p1) + (m * p2)
a = 1 - A
return(c(A = A, a = a))
}
(1-alleleDif)
alleleF <- sapply(seq(0.05,0.45,0.05), function(mProportion){
sapply(seq(0,0.3,0.05), function(alleleDiff){
newAlleleFrequencies(p1 = 0.3,
p2 = (0.3-alleleDiff),
m = mProportion)[1]
})
})
# Before the migration event
populationMean(p = 0.3, a = -2, d = 1.5)
meansChange <- function(Mnew, M){
Mnew - M
}
originalMean <- populationMean(p = 0.3, a = -2, d = 1.5)
populationMean <- function(p, a, d) {
q <- (1 - p)
return((a * (p - q)) + (2 * p * q * d))
}
meansChange <- function(Mnew, M){
Mnew - M
}
originalMean <- populationMean(p = 0.3, a = -2, d = 1.5)
newAlleleF <- newAlleleFrequencies(p1 = 0.3, p2 = (0.3 + alleleDiff), m = mProportion)[1]
meanChanges <- sapply(seq(0.05,0.45,0.05), function(mProportion){
sapply(seq(0,0.3,0.05), function(alleleDiff){
originalMean <- populationMean(p = 0.3, a = -2, d = 1.5)
newAlleleF <- newAlleleFrequencies(p1 = 0.3,
p2 = (0.3 + alleleDiff),
m = mProportion)[1]
newMean <- populationMean(p = newAlleleF, a = -2, d = 1.5)
round(meansChange(Mnew = newMean, M = originalMean),3)
})
})
as.matrix(11,1,1,1)
as.matrix(c(11,1,1,1))
as.matrix(c(11,1,1,1), dimnames(list(A=c(1,2,3,4),B=c(1))))
as.matrix(c(11,1,1,1), dimnames(list(A=c(1,2,3,4),B=c(2))))
matrix(c(1,1,1,1), 2,2)
matrix(c(1,1,1,1), 2,2, dimnames = list(c(A=c(1,2)))
matrix(c(1,1,1,1), 2,2, dimnames = list(c(A=c(1,2))))
matrix(c(1,1,1,1), 2,2, dimnames = list(c(A=c(1,2)), B=3,4))
matrix(c(1,1,1,1), 2,2, dimnames = list(c(A=c(1,2)), B=c(3,4))
matrix(c(1,1,1,1), 2,2, dimnames = list(c(A=c(1,2)), B=c(3,4)))
matrix(c(1,1,1,1), 2,2, dimnames = list(c(AM=c(1,2)), BC=c(3,4)))
matrix(c(1,1,1,1), 2,2, dimnames = list(AM=c(1,2), BC=c(3,4)))
as.matrix(c(1,1,1,1), 2,2, dimnames = list(AM=c(1,2), BC=c(3,4)))
as.matrix(c(1,1,1,1), 2,2, dimnames = list(AM=c(1,2,3,4), BC=c(1)))
as.matrix(c(1,1,1,1),dimnames = list(AM=c(1,2,3,4), BC=c(1)))
2 * m * delta * (a - (2*p1 - 1 +  (m * delta)) * d)
P <- 0.4
p <- 1-P
q <- 1-q
(1-0.4)*(p^2)
(1-s)*q^2 + 0.5*(2*p*q)
p <- 0.4
q <- 1-p
s <- 0.4
(1-s)*q^2 + 0.5*(2*p*q)
((1-s)*q^2 + 0.5*(2*p*q))/1-(s*q^2)
((1-s)*q^2 + 0.5*(2*p*q))/1-(s*q^2)
((1-s)*q^2 + 0.5*(2*p*q))/(1-(s*q^2))
afterOne <- ((1-s)*q^2 + 0.5*(2*p*q))/(1-(s*q^2))
outer(c(0.5,0.5),c(0.5,0.5),"*")
outer(c(A=0.5,a=0.5),c(A=0.5,a=0.5),"*")
punnett <- outer(c(A=0.5,a=0.5),c(A=0.5,a=0.5),"*")
punnett["A","A"]
mi <- c(2,3)
n <- 4
n <- 2
1^mi
1^mi(1/4)
(1^mi)*(1/4)
(1^mi)*(1/4)+((3/4)^mi)*(1/2)
prod((1^mi)*(1/4)+((3/4)^mi)*(1/2)+(0.25))
prod(1-((1^mi)*(1/4)+((3/4)^mi)*(1/2)+(0.25)))
1-(3/4)mi
1-(3/4)^mi
1-((3/4)^mi)
prod(1-((3/4)^mi))
aa= 0.25
AA = 0.25
Aa = 0.5
aa= 0.25
(0.5)^mi
((0.5)^mi)*AA
A <- 0.5
a <- (1-A)
B <- 0.5
b <- (1-B)
outer(c(A,a),c(B,b))
A <- 0.6
a <- (1-A)
B <- 0.4
b <- (1-B)
outer(c(A,a),c(B,b))
additiveRelationship <- function(data, orderedIDs){
data <- as.matrix(data[, c("Individual", "Sire", "Dam")])
n <- length(orderedIDs)
aR <- matrix(
data = 0,
nrow = n,
ncol = n,
dimnames = list(orderedIDs, orderedIDs)
)
diag(aR) <- 1
for(i in seq_len(n)){
for(j in seq_len(n)){
if(j > i){
row <- orderedIDs[i]
column <- orderedIDs[j]
parents <- data[data[,"Individual"] %in% column,2:3]
if(all(is.na(parents))){next()}
value <- (0.5 * (aR[row,parents[1]] + aR[row,parents[2]]))
aR[row,column] <- aR[column,row] <-  value
} else {
row <- orderedIDs[i]
parents <- data[data[,"Individual"] %in% row,2:3]
if(all(is.na(parents))){next()} else {
aR[row,row] <- (1+ 0.5 * (aR[parents[1],parents[2]]))}
}
}
}
return(aR)
}
potentillaArgentea$Individual <- 1:7
potentillaArgentea$Sire <- c(NA, NA, 1,3,1,4,5)
potentillaArgentea$Dam <- c(NA, NA, 2,3,4,2,6)
potentillaArgentea <- NULL
potentillaArgentea$Individual <- 1:7
potentillaArgentea$Sire <- c(NA, NA, 1,3,1,4,5)
potentillaArgentea$Dam <- c(NA, NA, 2,3,4,2,6)
potentillaArgentea <- as.data.frame.array(potentillaArgentea)
potentillaArgentea <- as.data.frame.array(as.data.frame(potentillaArgentea))
potentillaArgentea <- NULL
potentillaArgentea$Individual <- 1:7
potentillaArgentea$Sire <- c(NA, NA, 1,3,1,4,5)
potentillaArgentea$Dam <- c(NA, NA, 2,3,4,2,6)
potentillaArgentea <- as.data.frame.array(as.data.frame(potentillaArgentea))
additiveRelationship <- function(data, orderedIDs){
data <- as.matrix(data[, c("Individual", "Sire", "Dam")])
n <- length(orderedIDs)
aR <- matrix(
data = 0,
nrow = n,
ncol = n,
dimnames = list(orderedIDs, orderedIDs)
)
diag(aR) <- 1
for(i in seq_len(n)){
for(j in seq_len(n)){
if(j > i){
row <- orderedIDs[i]
column <- orderedIDs[j]
parents <- data[data[,"Individual"] %in% column,2:3]
if(all(is.na(parents))){next()}
value <- (0.5 * (aR[row,parents[1]] + aR[row,parents[2]]))
aR[row,column] <- aR[column,row] <-  value
} else {
row <- orderedIDs[i]
parents <- data[data[,"Individual"] %in% row,2:3]
if(all(is.na(parents))){next()} else {
aR[row,row] <- (1+ 0.5 * (aR[parents[1],parents[2]]))}
}
}
}
return(aR)
}
additiveRelationship(potentillaArgentea)
additiveRelationship(potentillaArgentea, orderedIDs = 1:7)
mean(aR)
diag(aR) <- NA
aR <- additiveRelationship(potentillaArgentea, orderedIDs = 1:7)
diag(aR) <- NA
mean(aR)
mean(aR, na.rm = TRUE)
aR[1:2,]
aR <- additiveRelationship(potentillaArgentea, orderedIDs = 1:7)
aR[1:2,]
mean(aR[1:2,])
mean(aR[2:3,])
mean(aR[3:4,])
mean(aR[4:5,])
library(gtools)
combinations(3,2,c("A","D"))
combinations(2,3,c("A","D"))
permutations(2,3,c("A","D"))
permutations(3,2,c("A","D"))
x <- c(0.30,0.32,0.34)
x <- c(0.30,0.32,0.34)
y <- c(1.15,1.12,1.08)
lm(y~x)
predict(lm(y~x),data.frame(x=0.35))
y <- c(1.15,1.12,1.08,1.04)
x <- c(0.30,0.32,0.34,0.36)
y <- c(1.15,1.12,1.08,1.04)
predict(lm(y~x),data.frame(x=0.35))
round(-0.17376606)
round(-0.17376606,2)
round(-0.17376606,3)
i <- (1.17+1.06)/2
hx <- sqrt(c(0.26, 0.26, 0.26))
hy <- sqrt(c(0.37, 0.52, 0.20))
ra <- c(-0.54, -0.46, -0.12)
sigmaPY <- sqrt(c(0.9, 0.6, 1))
i*hx*hy*ra*sigmaPY
round(i*hx*hy*ra*sigmaPY,3)
mean(c(3,4,5))
mean(c(3,4,5,NA))
mean(c(3,4,5,NA),na.rm = TRUE)
mean(c(3,4,5,NA),na.rm = TRUE)
i <- 1
j <- 2
aR <- additiveRelationship(potentillaArgentea, orderedIDs = 1:7)
additiveRelationship <- function(data, orderedIDs){
data <- as.matrix(data[, c("Individual", "Sire", "Dam")])
n <- length(orderedIDs)
aR <- matrix(
data = 0,
nrow = n,
ncol = n,
dimnames = list(orderedIDs, orderedIDs)
)
diag(aR) <- 1
for(i in seq_len(n)){
for(j in seq_len(n)){
if(j > i){
row <- orderedIDs[i]
column <- orderedIDs[j]
parents <- data[data[,"Individual"] %in% column,2:3]
if(all(is.na(parents))){next()} else {
value <- (0.5 * (aR[row,parents[1]] + aR[row,parents[2]]))
aR[row,column] <- aR[column,row] <-  value
}
} else {
row <- orderedIDs[i]
parents <- data[data[,"Individual"] %in% row,2:3]
if(all(is.na(parents))){next()} else {
aR[row,row] <- (1+ 0.5 * (aR[parents[1],parents[2]]))}
}
}
}
return(round(aR,3))
}
potentillaArgentea <- NULL
potentillaArgentea$Individual <- 1:7
potentillaArgentea$Sire <- c(NA, NA, 1,3,1,4,5)
potentillaArgentea$Dam <- c(NA, NA, 2,3,4,2,6)
potentillaArgentea <- as.data.frame.array(as.data.frame(potentillaArgentea))
aR <- additiveRelationship(potentillaArgentea, orderedIDs = 1:7)
aR[row,column]
row <- orderedIDs[i]
column <- orderedIDs[j]
orderedIDs = 1:7
aR[row,column]
row <- orderedIDs[i]
column <- orderedIDs[j]
aR[row,column]
aR[row,column]/sqrt(aR[row,row],aR[column,column])
aR[row,column]/sqrt(aR[row,row]*aR[column,column])
WRC <- function(aR){
for(i in seq_len(n)){
for(j in seq_len(n)){
row <- orderedIDs[i]
column <- orderedIDs[j]
aR[row,column]/sqrt(aR[row,row]*aR[column,column])
}
}
}
WRC(aR)
n <- ncol(aR)
WRC <- function(aR){
n <- ncol(aR)
for(i in seq_len(n)){
for(j in seq_len(n)){
row <- orderedIDs[i]
column <- orderedIDs[j]
aR[row,column]/sqrt(aR[row,row]*aR[column,column])
}
}
}
WRC(aR)
print(aR[row,column]/sqrt(aR[row,row]*aR[column,column]))
WRC <- function(aR){
n <- ncol(aR)
for(i in seq_len(n)){
for(j in seq_len(n)){
row <- orderedIDs[i]
column <- orderedIDs[j]
print(aR[row,column]/sqrt(aR[row,row]*aR[column,column]))
}
}
}
WRC(aR)
WC <- matrix(0,n,n)
WRC <- function(aR){
n <- ncol(aR)
WC <- matrix(0,n,n)
colnames(WC) <- colnames(aR)
rownames(WC) <- rownames(aR)
for(i in seq_len(n)){
for(j in seq_len(n)){
row <- orderedIDs[i]
column <- orderedIDs[j]
WC[i,j] <- print(aR[row,column]/sqrt(aR[row,row]*aR[column,column]))
}
}
}
WRC(aR)
WRC <- function(aR){
n <- ncol(aR)
WC <- matrix(0,n,n)
colnames(WC) <- colnames(aR)
rownames(WC) <- rownames(aR)
for(i in seq_len(n)){
for(j in seq_len(n)){
row <- orderedIDs[i]
column <- orderedIDs[j]
WC[i,j] <- aR[row,column]/sqrt(aR[row,row]*aR[column,column])
}
}
return(WC)
}
WRC(aR)
WRC <- function(aR){
n <- ncol(aR)
WC <- matrix(0,n,n)
colnames(WC) <- colnames(aR)
rownames(WC) <- rownames(aR)
for(i in seq_len(n)){
for(j in seq_len(n)){
row <- orderedIDs[i]
column <- orderedIDs[j]
WC[i,j] <- aR[row,column]/sqrt(aR[row,row]*aR[column,column])
}
}
return(WC)
}
WRC <- function(aR){
n <- ncol(aR)
WC <- matrix(0,n,n)
colnames(WC) <- colnames(aR)
rownames(WC) <- rownames(aR)
for(i in seq_len(n)){
for(j in seq_len(n)){
row <- orderedIDs[i]
column <- orderedIDs[j]
WC[i,j] <- aR[row,column]/sqrt(aR[row,row]*aR[column,column])
}
}
return(WC)
}
WRC(aR)
sqrt(1)
additiveRelationship <- function(data, orderedIDs){
data <- as.matrix(data[, c("Individual", "Sire", "Dam")])
n <- length(orderedIDs)
aR <- matrix(
data = 0,
nrow = n,
ncol = n,
dimnames = list(orderedIDs, orderedIDs)
)
diag(aR) <- 1
for(i in seq_len(n)){
for(j in seq_len(n)){
if(j > i){
row <- orderedIDs[i]
column <- orderedIDs[j]
parents <- data[data[,"Individual"] %in% column,2:3]
if(all(is.na(parents))){next()} else {
value <- (0.5 * (aR[row,parents[1]] + aR[row,parents[2]]))
aR[row,column] <- aR[column,row] <-  value
}
} else {
row <- orderedIDs[i]
parents <- data[data[,"Individual"] %in% row,2:3]
if(all(is.na(parents))){next()} else {
aR[row,row] <- (1+ 0.5 * (aR[parents[1],parents[2]]))}
}
}
}
return(round(aR,3))
}
potentillaArgentea <- NULL
potentillaArgentea$Individual <- 1:7
potentillaArgentea$Sire <- c(NA, NA, 1,3,1,4,5)
potentillaArgentea$Dam <- c(NA, NA, 2,3,4,2,6)
potentillaArgentea <- as.data.frame.array(as.data.frame(potentillaArgentea))
aR <- additiveRelationship(potentillaArgentea, orderedIDs = 1:7)
diag(aR)-1
round(mean(diag(aR)-1),3)
diag(aR) <- NA
aR
mean(aR, na.rm = TRUE)
WRC()
aR <- additiveRelationship(potentillaArgentea, orderedIDs = 1:7)
n <- ncol(aR)
WC <- matrix(0,n,n)
colnames(WC) <- colnames(aR)
rownames(WC) <- rownames(aR)
for(i in seq_len(n)){
for(j in seq_len(n)){
row <- orderedIDs[i]
column <- orderedIDs[j]
WC[i,j] <- aR[row,column]/sqrt(aR[row,row]*aR[column,column])
}
}
WRC()
WC[2,-2]
WC
aR[3,3]
aR[3,4]
aR[3,3]
aR[3,3]*aR[4,4]
sqrt(aR[3,3]*aR[4,4])
1/sqrt(aR[3,3]*aR[4,4])
x <- NULL
x$Individual <- c("1","2","3","4","5","A","B","C","D","E","F")
x
x$Individual <- c("1","2","3","4","5","A","B","E","G","D","C","F")
x$Sire <- c(NA,NA,NA,NA,NA,"1","1","3","4","G")
x$Dam <- c(NA,NA,NA,NA,NA,"2","2","A","A","G")
x
x$Individual <- c("1","2","3","4","5","A","B","E","G","D","C","F")
x$Sire <- c(NA,NA,NA,NA,NA,"1","1","3","4","G","5","G")
x$Dam <- c(NA,NA,NA,NA,NA,"2","2","A","A","G","G","F")
x <- NULL
x$Individual <- c("1","2","3","4","5","A","B","E","G","D","C","F")
x$Sire <- c(NA,NA,NA,NA,NA,"1","1","3","4","G","5","G")
x$Dam <- c(NA,NA,NA,NA,NA,"2","2","A","A","G","G","F")
as.data.frame(x)
as.data.frame.array(as.data.frame(x))
x <- as.data.frame.array(as.data.frame(x))
additiveRelationship(x, orderedIDs = c("1","2","3","4","5","A","B","E","G","D","C","F"))
additiveRelationship(x, orderedIDs = c("1","2","3","4","5","A","B","E","G","D","C","F"))["G",]
additiveRelationship(x, orderedIDs = c("1","2","3","4","5","A","B","E","G","D","C","F"))["G",c("A","B","E","G","D","C","F")]
