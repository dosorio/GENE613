seq(from= 0.05, to=0.45, each = 0.05)
seq(0.05,0.45,0.05)
seq(0,0.3,0.05)
alleleFrequencyes <- sapply(seq(0.05,0.45,0.05), function(migrationProportion){
sapply(seq(0,0.3,0.05), function(alleleDifferences){
return(1)
})
})
colnames(alleleFrequencies)
seq(0.05,0.45,0.05)
colnames(alleleFrequencies) <- seq(0.05,0.45,0.05)
alleleFrequencies <- sapply(seq(0.05,0.45,0.05), function(migrationProportion){
sapply(seq(0,0.3,0.05), function(alleleDifferences){
return(1)
})
})
colnames(alleleFrequencies) <- seq(0.05,0.45,0.05)
colnames(alleleFrequencies) <- list(MIGRATION=seq(0.05,0.45,0.05))
colnames(alleleFrequencies) <- list(c(MIGRATION=seq(0.05,0.45,0.05)))
names(alleleFrequencies) <- list(c(MIGRATION=seq(0.05,0.45,0.05)))
alleleFrequencies
colnames(alleleFrequencies) <- c(MIGRATION=seq(0.05,0.45,0.05))
alleleFrequencies
alleleFrequencies <- sapply(seq(0.05,0.45,0.05), function(migrationProportion){
sapply(seq(0,0.3,0.05), function(alleleDifferences){
return(1)
})
})
colnames(alleleFrequencies) <- c(MIGRATION=seq(0.05,0.45,0.05))
alleleFrequencies
rownames(alleleFrequencies) <- c(ALLELE=seq(0,0.3,0.05))
alleleFrequencies <- sapply(seq(0.05,0.45,0.05), function(mProportion){
sapply(seq(0,0.3,0.05), function(alleleDiff){
return(1)
})
})
alleleFrequencies
newAlleleFrequencies <- function(p1, p2, m) {
A = ((1 - m) * p1) + (m * p2)
a = 1 - A
return(c(A = A, a = a))
}
(1-alleleDif)
alleleF <- sapply(seq(0.05,0.45,0.05), function(mProportion){
sapply(seq(0,0.3,0.05), function(alleleDiff){
newAlleleFrequencies(p1 = 0.3,
p2 = (0.3-alleleDiff),
m = mProportion)[1]
})
})
# Before the migration event
populationMean(p = 0.3, a = -2, d = 1.5)
meansChange <- function(Mnew, M){
Mnew - M
}
originalMean <- populationMean(p = 0.3, a = -2, d = 1.5)
populationMean <- function(p, a, d) {
q <- (1 - p)
return((a * (p - q)) + (2 * p * q * d))
}
meansChange <- function(Mnew, M){
Mnew - M
}
originalMean <- populationMean(p = 0.3, a = -2, d = 1.5)
newAlleleF <- newAlleleFrequencies(p1 = 0.3, p2 = (0.3 + alleleDiff), m = mProportion)[1]
meanChanges <- sapply(seq(0.05,0.45,0.05), function(mProportion){
sapply(seq(0,0.3,0.05), function(alleleDiff){
originalMean <- populationMean(p = 0.3, a = -2, d = 1.5)
newAlleleF <- newAlleleFrequencies(p1 = 0.3,
p2 = (0.3 + alleleDiff),
m = mProportion)[1]
newMean <- populationMean(p = newAlleleF, a = -2, d = 1.5)
round(meansChange(Mnew = newMean, M = originalMean),3)
})
})
as.matrix(11,1,1,1)
as.matrix(c(11,1,1,1))
as.matrix(c(11,1,1,1), dimnames(list(A=c(1,2,3,4),B=c(1))))
as.matrix(c(11,1,1,1), dimnames(list(A=c(1,2,3,4),B=c(2))))
matrix(c(1,1,1,1), 2,2)
matrix(c(1,1,1,1), 2,2, dimnames = list(c(A=c(1,2)))
matrix(c(1,1,1,1), 2,2, dimnames = list(c(A=c(1,2))))
matrix(c(1,1,1,1), 2,2, dimnames = list(c(A=c(1,2)), B=3,4))
matrix(c(1,1,1,1), 2,2, dimnames = list(c(A=c(1,2)), B=c(3,4))
matrix(c(1,1,1,1), 2,2, dimnames = list(c(A=c(1,2)), B=c(3,4)))
matrix(c(1,1,1,1), 2,2, dimnames = list(c(AM=c(1,2)), BC=c(3,4)))
matrix(c(1,1,1,1), 2,2, dimnames = list(AM=c(1,2), BC=c(3,4)))
as.matrix(c(1,1,1,1), 2,2, dimnames = list(AM=c(1,2), BC=c(3,4)))
as.matrix(c(1,1,1,1), 2,2, dimnames = list(AM=c(1,2,3,4), BC=c(1)))
as.matrix(c(1,1,1,1),dimnames = list(AM=c(1,2,3,4), BC=c(1)))
2 * m * delta * (a - (2*p1 - 1 +  (m * delta)) * d)
(1-r)^seq(1,100,1)
(1-0.01)^seq(1,100,1)
(1-0.01)^seq(1,100,1)*0.05
(1-0.01)^seq(1,100,1)*0.5
plot((1-0.01)^seq(1,100,1)*0.5,"l")
plot((1-0.01)^seq(1,100,1)*0.5)
plot((1-0.1)^seq(1,100,1)*0.5)
plot((1-0.1)^seq(1,100,1)*0.5, type = "l")
plot((1-seq(0,0.5,0.01))^seq(1,100,1)*0.5, type = "l")
t = seq(1,10,1)
(1-r)^t
r = 0.01
t = seq(1,10,1)
(1-r)^t
t = seq(1,1000,1)
(1-r)^t
plot((1-r)^t)
plot((1-r)^t,type = "l")
t = seq(1,500,1)
plot((1-r)^t,type = "l")
(1-r)^
(1-r)^t
r = 0.001
t = seq(1,500,1)
plot((1-r)^t,type = "l")
r = 0.0001
t = seq(1,500,1)
plot((1-r)^t,type = "l")
r = 0.0001
t = seq(1,500,1)
plot((1-r)^t,type = "l")
t = seq(1,5000,1)
plot((1-r)^t,type = "l")
t = seq(1,1000,1)
plot((1-r)^t,type = "l")
(1-r)^t
t = seq(1,10000,1)
plot((1-r)^t,type = "l")
r = 0.0001
t = seq(1,10000,1)
plot((1-r)^t,type = "l")
r = 0.5
t = seq(1,10000,1)
plot((1-r)^t,type = "l")
t = seq(1,100,1)
plot((1-r)^t,type = "l")
r = 0.5
t = seq(1,100,1)
plot((1-r)^t,type = "l")
t = seq(1,10,1)
plot((1-r)^t,type = "l")
r = 0.5
t = seq(1,10,1)
plot((1-r)^t,type = "l")
r = c(0.5,0.1)
t = seq(1,10,1)
plot((1-r)^t,type = "l")
(1-r)
B = 0.5
B = 0.5
A = 0.01
r = 0.5
(log(B)-log(A))/log(1-r)
(log(B)-log(A))/log(1-r)
B = 0.05
A = 0.01
r = 0.
(log(B)-log(A))/log(1-r)
B = 0.1
A = 0.01
r = 0.
(log(B)-log(A))/log(1-r)
(log10(B)-log10(A))/log10(1-r)
B-A
r = 0.1
(B-A/1-r)
B-A
1-r
(B-A/(1-r))
(B-A/(1-r))
((log(B)-log(A))/log((1-r)))
B = 0.01
A = 0.1
r = 0.1
((log(B)-log(A))/log((1-r)))
A = 0.1
B = 0.01
r = 0.1
((log(B)-log(A))/log((1-r)))
A = 0.1
B = 0.01
r = 0.01
((log(B)-log(A))/log((1-r)))
log(1-r)
log(1-r)
log(1-0.1)
log((1-0.1))
requiredT <- function(start, end, r){
return ((log(end) - log(start))/log(1-r))
}
ceiling(3.12)
log(0)
log1p(0)
log1p(0)-log1p(0.2)
log1p(0)-log1p(0.2)/log1p(1-0.2)
(log1p(0)-log1p(0.2))/log1p(1-0.2)
(log10(0)-log10(0.2))/log10(1-0.2)
(1-0.2)^7
(1-0.2)^7*0.2
(1-0.2)^6*0.2
(1-0.2)^4*0.2
(1-0.2)^3*0.2
D <- function(A,B,Observed){
Observed-(A*B)
}
D(A = 0.7, B = 0.8)
D(A = 0.7, B = 0.8, Observed = 0.6)
D <- function(alleleA,alleleB,Observed){
Observed-(alleleA*alleleB)
}
D(A = 0.7, B = 0.8, Observed = 0.6)
(0.7 * 0.2)
(0.7 * 0.2) - 0.1
c(((DAB)/max(c(PA*PB,Pa*Pb)),(DAB/min(c(PA*Pb,Pa*Pb)))))
lewontinD <- function (DAB, PA, PB, Pa, Pb){
c(((DAB)/max(c(PA*PB,Pa*Pb)),(DAB/min(c(PA*Pb,Pa*Pb)))))
}
max(c(PA*PB,Pa*Pb))
(DAB/max(c(PA*PB,Pa*Pb)))
lewontinD <- function (DAB, PA, PB, Pa, Pb) {
c((DAB / max(c(PA * PB, Pa * Pb))),
(DAB / min(c(PA * Pb, Pa * Pb))))
}
DAB = 0.04
PA = 0.7
PB = 0.8
Pa = 0.3
Pb = 0.2
c(PA * Pb, Pa * Pb)
min(c(PA * Pb, Pa * Pb))
DAB
(DAB / min(c(PA * Pb, Pa * Pb)))
